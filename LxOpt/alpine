#!/bin/env sh
Path=$(cd "(dirname "${0}")" &>/dev/null && pwd)
black="\e[30m"
red="\033[31m"
green="\033[32m"
yellow="\033[33m"
blue="\033[34m"
purple="\033[35m"
cyan="\033[36m"
white="\033[37m"
background="\033[0m"
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'
export GHP="https://gh.arcticfox.top/"

log.info(){
  local timestamp=$(date +"%H:%M:%S")
  echo -e "${BLUE}[INFO][${timestamp}] - $1${NC}"
}
log.success(){
  local timestamp=$(date +"%H:%M:%S")
  echo -e "${GREEN}[SUCCESS][${timestamp}] - $1${NC}"
}
log.warn(){
  local timestamp=$(date +"%H:%M:%S")
  echo -e "${YELLOW}[WARN][${timestamp}] - $1${NC}"
}
log.error(){
  local timestamp=$(date +"%H:%M:%S")
  echo -e "${RED}[ERROR][${timestamp}] - $1${NC}" >&2
}

selectLocation(){
if [ -n ${LOCATION} ];then
  return 0
fi
echo
echo -en "
 ———————————————————
 ${cyan}请问您的设备所在位置是? 
    ${green}1${white}. 中国大陆 ${background}
    ${green}2${white}. 其他位置 ${background}
 ———————————————————
 ${cyan}请输入数字 ${white}[1-2]: ${background}"
read num
case "$num" in
  1)
    export LOCATION=CN
    return 0;;
  2)
    return 1;;
  *)
    log.warn "输入错误 保持默认 中国大陆"
    return 0
esac
}
getLocation(){
if $(type jq > /dev/null 2>&1)
then
  Json=$(curl -sL --connect-timeout 5 --max-time 10 ipinfo.io/json)
  if [ -n "${Json}" ]
  then
    if ! echo "${Json}" | grep -q error
    then
      if echo "${Json}" | jq -r .country | grep -q "CN";then
        return 0
      else
        return 1
      fi
    fi
  fi
  Json=$(curl -sL --connect-timeout 5 --max-time 10 ipapi.co/json)
  if [ -n "${Json}" ]
  then
    if ! echo "${Json}" | grep -q error
    then
      if echo "${Json}" | jq -r .country | grep -q "CN";then
        return 0
      else
        return 1
      fi
    fi
  fi
  Json=$(curl -sL --connect-timeout 5 --max-time 10 ip-api.com/json)
  if [ -n "${Json}" ]
  then
    if ! echo "${Json}" | grep -q fail
    then
      if echo "${Json}" | jq -r .countryCode | grep -q "CN";then
        return 0
      else
        return 1
      fi
    fi
  fi
else
  if $(type curl > /dev/null 2>&1)
  then
    Json=$(curl -sL --connect-timeout 5 --max-time 10 ipinfo.io/country)
    if [ -n "${Json}" ]
    then
      if echo "${Json}" | grep -q error
      then
        selectLocation
        local result=$?
        return ${result}
      else
        if echo "${Json}" | grep -q "CN";then
          return 0
        else
          return 1
        fi
      fi
    fi
    Json=$(curl -sL --connect-timeout 5 --max-time 10 ipapi.co/country)
    if [ -n "${Json}" ];then
      if echo "${Json}" | grep -q error
      then
        selectLocation
        local result=$?
        return ${result}
      else
        if echo "${Json}" | grep -q "CN";then
          return 0
        else
          return 1
        fi
      fi
    fi
  else
    selectLocation
    local result=$?
    return ${result}
  fi
fi
}

gitRaw(){
if getLocation
then
  getFile $1 ${GHP}https://github.com/$2/raw/refs/heads/$3/$4
else
  getFile $1 https://github.com/$2/raw/refs/heads/$3/$4
fi
}
gitCR(){
case $1 in
raw)
  # $2: 保存文件名
  # $3 用户名/仓库名
  # $4 分支名
  # $5 文件路径
  gitRaw $2 $3 $4 $5;;
esac
}

IncrCounter(){
  if [ -z ${count} ]
  then
    count=0
  fi
  let count++
  case ${count} in
    3)
      count=0
      return 1
  esac
  return 0
}

Download(){
  log.info "正在下载 ${file}"
  until ${Command}
  do
    if ! IncrCounter
    then
      log.error "错误次数过多"
      return 1
    fi
    log.warn "下载失败 三秒后重试"
    sleep 3s
  done
  log.success "下载完成"
  return 0
}
getFile(){
file="$1"
URL="$2"
if $(type wget > /dev/null 2>&1) && $(wget --help 2>&1 | grep -q show-progress)
then
  Command="wget --quiet --show-progress --output-document="${file}" --continue "${URL}""
  Download
elif $(type curl > /dev/null 2>&1) && $(curl --help all 2>&1 | grep -q progress-bar)
then
  Command="curl --output "${file}" --progress-bar --location --continue-at - "${URL}""
  Download
elif $(type curl > /dev/null 2>&1)
then
  Command="curl --output "${file}" --continue-at - "${URL}""
  Download
elif $(type wget > /dev/null 2>&1)
then
  Command="wget --output-document="${file}" --continue "${URL}""
  Download
else
  log.error "无下载器"
  return 1
fi
}

log.info "正在配置 DNS"
rm -f /etc/resolv.conf > /dev/null 2>&1
if getLocation
then
  echo 'nameserver 223.5.5.5
nameserver 223.6.6.6
nameserver 2400:3200::1
nameserver 2400:3200:baba::1' > /etc/resolv.conf
else
  echo 'nameserver 1.1.1.1
nameserver 1.0.0.1
nameserver 2606:4700:4700::1111
nameserver 2606:4700:4700::1001' > /etc/resolv.conf
fi
log.success "配置完成"

log.info "正在切换 软件源"
if getLocation
then
  OldSource="dl-cdn.alpinelinux.org"
  NewSource="mirrors.cernet.edu.cn"
else
  OldSource="dl-cdn.alpinelinux.org"
  NewSource="dl-cdn.alpinelinux.org"
fi
sed -i "s|${OldSource}|${NewSource}|g" /etc/apk/repositories

log.info "正在更新 软件源列表"
apk update
log.success "更新完成"

log.info "正在更新 软件包"
apk upgrade
log.success "更新完成"

log.info "正在安装 cURL"
apk add curl
log.success "安装完成"

log.info "正在设置 中文环境"
apk add fontconfig musl-locales musl-locales-lang
gitCR raw SourceHanSerif.ttc adobe-fonts/source-han-serif release OTC/SourceHanSerif-SemiBold.ttc
if [ ! -d /usr/local/share/fonts ]
then
  mkdir -p /usr/local/share/fonts
fi
mv SourceHanSerif.ttc /usr/local/share/fonts/SourceHanSerif.ttc
fc-cache -f
echo -e "LANG=zh_CN.UTF-8\nLANGUAGE=zh_CN:zh\nLC_ALL=zh_CN.UTF-8" > /etc/locale.conf
log.success "设置完成"

log.info "正在设置 时区"
apk add tzdata alpine-conf
rm -f /etc/localtime > /dev/null 2>&1
ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
setup-timezone Asia/Shanghai
log.success "设置完成"

if apk info -e ca-certificates > /dev/null 2>&1
then
  log.info "正在更新 CA证书"
  update-ca-certificates
  log.success "更新完成"
else
  log.info "正在安装 CA证书"
  apk add ca-certificates
  update-ca-certificates
  log.success "安装完成"
fi

log.info "正在切换 https"
if ! grep -q "https" /etc/apk/repositories
then
  sed -i "s|http|https|g" /etc/apk/repositories
fi
apk update
log.success "切换完成"

rm -f ${Path}/function
rm -f ${Path}/common