#!/bin/env bash
Path=$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
source ${Path}/function
cd ${Path}
bash package
ConfigPath="${Path}/config.json"
Linux="$(jq -r .Linux ${ConfigPath})"
Version="$(jq -r .Version ${ConfigPath})"
Arch="$(jq -r .Arch ${ConfigPath})"
Variant="$(jq -r .Variant ${ConfigPath})"
FOLDER="${Linux}-${Version}"
if [ -d $HOME/AF-Proot/${FOLDER} ]
then
  log.warn "${FOLDER} [已经部署]"
  log.info "正在启动 ${Linux}-${Version}"
  exit 0
fi
if ! bash main
then
  exit
fi
cp ${Path}/LxOpt/${Linux} $HOME/AF-Proot/${FOLDER}/tmp/${Linux}
cp ${Path}/function $HOME/AF-Proot/${FOLDER}/tmp/function
cp ${Path}/LxOpt/common $HOME/AF-Proot/${FOLDER}/tmp/common
chmod +x $HOME/AF-Proot/${FOLDER}/tmp/${Linux}
if [ -e $HOME/AF-Proot/${Linux}-${Version}/bin/bash ] || [ -e $HOME/AF-Proot/${Linux}-${Version}/usr/bin/bash ]
then
  Command="bash /tmp/${Linux} && rm /tmp/${Linux}"
elif [ -e $HOME/AF-Proot/${Linux}-${Version}/bin/sh ] || [ -e $HOME/AF-Proot/${Linux}-${Version}/usr/bin/sh ]
then
  Command="sh /tmp/${Linux} && rm /tmp/${Linux}"
else
  Command="/tmp/${Linux} && rm /tmp/${Linux}"
fi
$HOME/AF-Proot/login/${Linux}-${Version} ${Command}
width=$(tput cols 2>/dev/null)
printf "%0.s-" $(seq 1 $width)
echo
neofetch --ascii_distro ${Linux}
width=$(tput cols 2>/dev/null)
printf "%0.s-" $(seq 1 $width)
echo
echo -e ${blue}[${green}*${blue}] ${cyan}${Linux}-${Version} ${yellow}启动命令:${background}
echo -e ${blue}[${green}*${blue}] ${purple}afpt login ${Linux} ${Version}${background}
width=$(tput cols 2>/dev/null)
printf "%0.s-" $(seq 1 $width)
echo
if [ -n "${custom}" ]
then
  log.info "正在执行自定义脚本"
  CustomPath=${custom}
  mv ${CustomPath} $HOME/AF-Proot/${FOLDER}/tmp/custom
  chmod +x $HOME/AF-Proot/${FOLDER}/tmp/custom
  $HOME/AF-Proot/login/${Linux}-${Version} "cd /tmp && ./custom"
fi
$HOME/AF-Proot/login/${Linux}-${Version}
